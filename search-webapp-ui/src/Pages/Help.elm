module Pages.Help exposing (view)

{-| The static 'help' page.
-}

import Html exposing (Html, a, b, br, dd, div, dl, dt, h1, h2, h3, h4, img, p, span, text)
import Html.Attributes exposing (alt, href, src, style, width)
import Material.Extra.Typography as TypographyExtra
import Material.Typography as Typography


{-| Renders the 'help' page.
-}
view : List (Html msg)
view =
    [ h1 [ Typography.headline3 ] [ text "Help" ]
    , p [ Typography.body1 ]
        [ text "Terminology used throughout the app:"
        , dl []
            [ dt [ Typography.overline ] [ b "search term" ]
            , dd [] [ text "Your input is split on special characters, such as whitespace, '.', '_' or '-', into search terms (that wil then be looked up)." ]
            , dt [ Typography.overline ] [ b "phrase" ]
            , dd [] [ text "A phrase consists of terms that must (roughly) occur after each other." ]
            , dt [ Typography.overline ] [ b "filter" ]
            , dd [] [ text "Each filter corresponds to a property (e.g., the source theory) on which it imposes restrictions." ]
            , dt [ Typography.overline ] [ b "facet" ]
            , dd [] [ text "List of distinct values with their number of occurrences in the result set." ]
            , dt [ Typography.overline ] [ b "block" ]
            , dt [ Typography.overline ] [ b "semantic entity" ]
            , dd []
                [ text "The code from an Isabelle command span, together with the semantic entities that are generated by it, is called a block here."
                , br
                , text "When filtering on semantic entities, a block will be in the result set if it contains a matching entity."
                ]
            ]
        ]
    , h2 [ Typography.headline4 ] [ text "Isabelle Characters" ]
    , p [ Typography.body1 ]
        [ text "To search for isabelle special characters, use the abbreviation (if unique): "
        , a [ href "#search?q={\"term\"%3A\"%3D%3D>\"}" ] [ text "==>" ]
        , text ", the isabelle markup : "
        , a [ href "#search?q={\"term\"%3A\"\\\\<Longrightarrow>\"}" ] [ text "\\<Longrightarrow>" ]
        , text ", or the unicode representation: "
        , a [ href "#search?q={\"term\"%3A\"⟹\"}" ] [ text "⟹" ]
        , text "."
        ]
    , h2 [ Typography.headline4 ] [ text "Main Search Bar" ]
    , p [ Typography.body1 ]
        [ text "Often the start point for a search, the main search bar will retrieve results where any of your search terms occur in the source code."
        , br
        , text "You can also use '*' as a wildcard."
        , svg "searchbar"
        ]
    , h2 [ Typography.headline4 ] [ text "Filters" ]
    , p [ Typography.body1 ]
        [ text "Add (and remove) filters to narrow down the results. Properties you can filter for are listed below."
        , svg "add_filter"
        , dl []
            [ dt [ Typography.overline ] [ b "Isabelle Command" ]
            , dd []
                [ text "Command associated with the block. Example: "
                , code "fun"
                ]
            , dt [ Typography.overline ] [ b "Constant Type" ]
            , dd []
                [ text "Type of a semantic constant entity. Example: "
                , code "'a List.list ⇒ Nat.nat"
                , br
                , text " (though searching for the phrase "
                , code "'a list => nat"
                , text " would work!)"
                ]
            , dt [ Typography.overline ] [ b "Semantic Entity Name" ]
            , dd [] [ text "Name of an underlying semantic entity. Example: ", code "list" ]
            , dt [ Typography.overline ] [ b "Source Code" ]
            , dd []
                [ text "Isabelle source code of a block. Example: "
                , br
                , code "abbreviation length :: \"'a list ⇒ nat\" where \"length ≡ size\""
                ]
            , dt [ Typography.overline ] [ b "Source Theory" ]
            , dd [] [ text "Name of the theory where the results are located in. Example: ", code "HOL.List" ]
            ]
        , br
        , text "To add a phrase, enter it in the text field (press 'Enter' or click anywhere if you're done)."
        , br
        , text "If there aren't too many alternatives left, you can also click on the drop-down to select from an exhaustive list."
        , svg "add_remove_filterterm"
        , br
        , text "By default, results will be displayed if they match "
        , b "one of"
        , text " your phrases."
        , br
        , text "You can change that to require "
        , b "all of"
        , text " your phrases (or "
        , b "neither"
        , text ") to match."
        , svg "filter_change_mode"
        ]
    , h2 [ Typography.headline4 ] [ text "Drill-down Facets" ]
    , p [ Typography.body1 ]
        [ text "If you have restricted your result set enough so there are only a handful of alternatives for a property, you can directly select from the remaining options."
        , svg "facets"
        ]
    , h2 [ Typography.headline4 ] [ text "Uses/Used By" ]
    , p [ Typography.body1 ]
        [ text "To explore relations, you can filter for blocks that are "
        , b "used by"
        , text " or "
        , b "use"
        , text " the entities in a block that you have searched up before."
        , svg "to_uses"
        , br
        , b "Example: "
        , text "Suppose we have discovered the "
        , code "avl_delete"
        , text " lemmas and are interested in where they are actually used."
        , br
        , text "pressing the "
        , b "used by"
        , text " button creates a filter for that:"
        , svg "uses_results"
        ]
    , h2 [ Typography.headline4 ] [ text "Detail View" ]
    , p [ Typography.body1 ]
        [ text "Entities of a block (which are summarized under the source code) can be viewed in more detail by clicking on the block."
        , svg "to_details"
        , text "The listed entities can be expanded again to get more details, and their relations can be explored."
        , svg "details"
        ]
    ]


code : String -> Html msg
code str =
    span [ TypographyExtra.code2 ] [ text str ]


b : String -> Html msg
b str =
    Html.b [] [ text str ]


br : Html msg
br =
    Html.br [] []


svg : String -> Html msg
svg name =
    div [ style "margin" "8px" ] [ img [ src <| "assets/images/examples/" ++ name ++ ".svg", alt name ] [] ]
