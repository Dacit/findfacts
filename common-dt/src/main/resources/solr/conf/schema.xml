<?xml version="1.0" encoding="UTF-8" ?>
<schema name="theorydata" version="1.6">
    <fields>
        <field name="_root_" type="string" indexed="true" stored="false" docValues="false"/>
        <field name="id" type="string" required="true" docValues="false" uninvertible="true" multiValued="false"/>
        <field name="doc_kind" type="string" docValues="true" multiValued="false" required="true"/>
        <field name="version" type="string" docValues="true" multiValued="false"/>
        <field name="command" type="string" docValues="true" multiValued="false"/>
        <field name="session" type="name_text" multiValued="false"/>
        <field name="file" type="string" multiValued="false"/>
        <field name="theory" type="name_text" multiValued="false"/>
        <field name="kind" type="string" docValues="true" multiValued="false"/>
        <field name="session_facet" type="string" docValues="true" multiValued="false"/>
        <field name="theory_facet" type="string" docValues="true" multiValued="false"/>
        <field name="start_line" type="pint" multiValued="false"/>
        <field name="name" type="name_text" multiValued="false"/>
        <field name="name_facet" type="string" docValues="true" multiValued="false"/>
        <field name="type" type="type_text" multiValued="false"/>
        <field name="type_facet" type="string" docValues="true" multiValued="false"/>
        <field name="src_before" type="string" uninvertible="false" multiValued="false"/>
        <field name="src" type="source_text" uninvertible="false" multiValued="false"/>
        <field name="markup" type="string" uninvertible="false" multiValued="false"/>
        <field name="src_after" type="string" uninvertible="false" multiValued="false"/>
        <field name="uses" type="string" uninvertible="false" multiValued="true"/>
        <field name="_version_" type="plong" indexed="false" stored="false" multiValued="false"/>
    </fields>

    <copyField source="session" dest="session_facet" maxChars="3276"/>
    <copyField source="theory" dest="theory_facet" maxChars="3276"/>
    <copyField source="name" dest="name_facet" maxChars="3276"/>
    <copyField source="type" dest="type_facet" maxChars="3276"/>

    <uniqueKey>id</uniqueKey>

    <types>
        <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>
        <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
        <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
        <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
        <fieldType name="type_text" class="solr.TextField">
            <analyzer type="index">
                <!-- Break type down into type tokens -->
                <tokenizer class="solr.PatternTokenizerFactory"
                           pattern="\s*([\(\)\{\},⇒]|::|([^\(\)\{\},⇒\s:]|:[^\(\)\{\},⇒\s:])+)\s*"
                           group="1"/>
                <!-- lower-case everything -->
                <filter class="solr.LowerCaseFilterFactory"/>
                <!-- Add non-ascii string representations -->
                <filter class="solr.ASCIIFoldingFilterFactory" preserveOriginal="true"/>
                <!-- Split names -->
                <filter class="solr.WordDelimiterGraphFilterFactory"
                        generateWordParts="1" catenateWords="0"
                        generateNumberParts="1" catenateNumbers="0" splitOnNumerics="1"
                        catenateAll="0" splitOnCaseChange="0"
                        stemEnglishPossessive="0" preserveOriginal="1"/>
                <filter class="solr.FlattenGraphFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <!-- Break type down into type tokens -->
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="=>" replacement="⇒"/>
                <tokenizer class="solr.PatternTokenizerFactory"
                           pattern="\s*([\(\)\{\},⇒]|::|([^\(\)\{\},⇒\s:]|:[^\(\)\{\},⇒\s:])+)\s*"
                           group="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>
        <fieldType name="source_text" class="solr.TextField">
            <analyzer type="index">
                <!-- Html tags shouldn't be tokenized, so strip them first -->
                <charFilter class="solr.HTMLStripCharFilterFactory"/>
                <!-- Tokenize by whitespace + control characters -->
                <tokenizer class="solr.PatternTokenizerFactory"
                           pattern="\s*(::|[\(\)\{\}\[\]\.,:&quot;]|[^\p{ASCII}]|((?![^\p{ASCII}])[^\(\)\{\}\[\]\.,:&quot;\s])+)\s*"
                           group="1"/>
                <!-- lower-case everything -->
                <filter class="solr.LowerCaseFilterFactory"/>
                <!-- Add string representations of non-ascii characters -->
                <filter class="solr.ASCIIFoldingFilterFactory" preserveOriginal="true"/>
                <!-- Add words from tokens as well -->
                <filter class="solr.WordDelimiterGraphFilterFactory"
                        generateWordParts="1" catenateWords="0"
                        generateNumberParts="1" catenateNumbers="0" splitOnNumerics="1"
                        catenateAll="0" splitOnCaseChange="0"
                        stemEnglishPossessive="0" preserveOriginal="1"/>
                <filter class="solr.FlattenGraphFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <!-- Replace these before tokenization as they would be split into multiple tokens -->
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q(|\E" replacement="⦇"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q|)\E" replacement="⦈"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q[|\E" replacement="⟦"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q|]\E" replacement="⟧"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q{|\E" replacement="⦃"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q|}\E" replacement="⦄"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q:\E" replacement="∈"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q~:\E" replacement="∉"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q(=\E" replacement="⊆"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q)=\E" replacement="⊇"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q[=\E" replacement="⊑"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q]=\E" replacement="⊒"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q.=\E" replacement="≐"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q...\E" replacement="…"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q=_(\E" replacement="⇘"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q=_)\E" replacement="⇙"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q=^(\E" replacement="⇗"/>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\Q=^)\E" replacement="⇖"/>
                <!-- Tokenize by whitespace + control characters -->
                <tokenizer class="solr.PatternTokenizerFactory"
                           pattern="\s*(::|[\(\)\{\}\[\]\.,:&quot;]|[^\p{ASCII}]|((?![^\p{ASCII}])[^\(\)\{\}\[\]\.,:&quot;\s])+)\s*"
                           group="1"/>
                <!-- Replace isabelle special character names by the characters -->
                <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt"/>
                <!-- Can't replace '*=>' in the synonym file as '=>' is part of the syntax, and there is no escaping-->
                <filter class="solr.PatternReplaceFilterFactory" pattern="\Q==>\E" replacement="⟹"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="\Q=>\E" replacement="⇒"/>
                <!-- Finally lower-case -->
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>
        <fieldType name="name_text" class="solr.TextField">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory" rule="java"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.WordDelimiterGraphFilterFactory"
                        generateWordParts="1" catenateWords="0"
                        generateNumberParts="1" catenateNumbers="0" splitOnNumerics="1"
                        catenateAll="0" splitOnCaseChange="0"
                        stemEnglishPossessive="0" preserveOriginal="1"/>
                <filter class="solr.FlattenGraphFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory" rule="java"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>
    </types>
</schema>